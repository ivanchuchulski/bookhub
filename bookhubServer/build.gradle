plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'

    // https://github.com/gmazzo/gradle-buildconfig-plugin
    id "com.github.gmazzo.buildconfig" version "3.0.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // this is for the API project
    implementation project(':bookhubAPI')

    // external libraries
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
}

test {
    useJUnitPlatform()
}

javafx {
    version = "14"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

application {
    mainClass = 'server.Server'
}

buildConfig {
    className("BookhubServerConfig")   // forces the class name. Defaults to 'BuildConfig'
    packageName("server")  // forces the package. Defaults to '${project.group}'

    useJavaOutput() // forces the outputType to 'java'

    // RMI parameters
    def REGISTRY_PORT = property('REGISTRY_PORT')
    def SERVER_INTERFACE_REGISTRY_NAME = property('SERVER_INTERFACE_REGISTRY_NAME')

    // database credentials
    def DB_URL = property('DB_URL')
    def DB_USER = property('DB_USER')
    def DB_PASSWORD = property('DB_PASSWORD')

    // external systems API_KEY
    def GOOGLE_BOOKS_API_KEY = property('GOOGLE_BOOKS_API_KEY')

    buildConfigField('int', 'REGISTRY_PORT', "${REGISTRY_PORT}")
    buildConfigField('String', 'SERVER_INTERFACE_REGISTRY_NAME', "\"${SERVER_INTERFACE_REGISTRY_NAME}\"")

    buildConfigField('String', 'DB_URL', "\"${DB_URL}\"")
    buildConfigField('String', 'DB_USER', "\"${DB_USER}\"")
    buildConfigField('String', 'DB_PASSWORD', "\"${DB_PASSWORD}\"")

    buildConfigField('String', 'GOOGLE_BOOKS_API_KEY', "\"${GOOGLE_BOOKS_API_KEY}\"")
}

